#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=8:00:00           # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-100
#SBATCH --mem=8G                  # memory required per node - amount of memory (in bytes)
#SBATCH --job-name as4          # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab

########## Command Lines to Run ##########
EXP=alt-sig
DATA_DIR=/mnt/scratch/lalejini/data/sgp-regulation/alife-2020/arg-balanced/reg-network-comp/${EXP}
CONFIG_DIR=/mnt/home/lalejini/devo_ws/signalgp-genetic-regulation/experiments/alife-2020-sgp-reg/configs-alt-sig

##################################
# Setup random seed info
PROBLEM_SEED_OFFSET=3000
SEED=$((SLURM_ARRAY_TASK_ID + PROBLEM_SEED_OFFSET))

##################################
# Executable information
WORLD=alt-signal-exp
MATCH_METRIC=streak
MATCH_THRESH=25
REGULATOR_TYPE=add
TAG_LEN=64

##################################
# General world parameters
NUM_SIGNAL_RESPONSES=4
NUM_ENV_CYCLES=${NUM_SIGNAL_RESPONSES}
CPU_TIME_PER_ENV_CYCLE=128
POP_SIZE=1000
GENERATIONS=10000
SNAPSHOT_RESOLUTION=1000
SUMMARY_RESOLUTION=100
TOURNAMENT_SIZE=8
MAX_FUNC_CNT=128
MAX_FUNC_INST_CNT=64
INST_MIN_ARG_VAL=-8
INST_MIN_ARG_VAL=8
USE_FUNC_REGULATION=1
USE_GLOBAL_MEMORY=1

DUPLICATION_RATE=05
MUT_RATE__FUNC_DUP=0.${DUPLICATION_RATE}
MUT_RATE__FUNC_DEL=0.${DUPLICATION_RATE}

EXEC=${WORLD}_tag-len-${TAG_LEN}_match-metric-${MATCH_METRIC}_thresh-${MATCH_THRESH}_reg-${REGULATOR_TYPE}

RUN_NAME=RUN__TW_${TAG_LEN}__NUM_ENVS_${NUM_SIGNAL_RESPONSES}__REG_${USE_FUNC_REGULATION}__MEM_${USE_GLOBAL_MEMORY}__SEED_${SEED}
RUN_DIR=${DATA_DIR}/${RUN_NAME}

mkdir -p ${RUN_DIR}
cd ${RUN_DIR}
cp ${CONFIG_DIR}/config.cfg .
cp ${CONFIG_DIR}/${EXEC} .

module load GCC/9.1.0-2.32

echo "./${EXEC} -SEED ${SEED} -MUT_RATE__FUNC_DUP ${MUT_RATE__FUNC_DUP} -MUT_RATE__FUNC_DEL ${MUT_RATE__FUNC_DEL} -MAX_FUNC_CNT ${MAX_FUNC_CNT} -MAX_FUNC_INST_CNT ${MAX_FUNC_INST_CNT} -TOURNAMENT_SIZE ${TOURNAMENT_SIZE} -NUM_SIGNAL_RESPONSES ${NUM_SIGNAL_RESPONSES} -NUM_ENV_CYCLES ${NUM_ENV_CYCLES} -CPU_TIME_PER_ENV_CYCLE ${CPU_TIME_PER_ENV_CYCLE} -POP_SIZE ${POP_SIZE} -GENERATIONS ${GENERATIONS} -SNAPSHOT_RESOLUTION ${SNAPSHOT_RESOLUTION} -SUMMARY_RESOLUTION ${SUMMARY_RESOLUTION} -USE_FUNC_REGULATION ${USE_FUNC_REGULATION} -USE_GLOBAL_MEMORY ${USE_GLOBAL_MEMORY} -INST_MIN_ARG_VAL ${INST_MIN_ARG_VAL} -INST_MAX_ARG_VAL ${INST_MAX_ARG_VAL}" > ./cmd.txt
./${EXEC} -SEED ${SEED} -MUT_RATE__FUNC_DUP ${MUT_RATE__FUNC_DUP} -MUT_RATE__FUNC_DEL ${MUT_RATE__FUNC_DEL} -MAX_FUNC_CNT ${MAX_FUNC_CNT} -MAX_FUNC_INST_CNT ${MAX_FUNC_INST_CNT} -TOURNAMENT_SIZE ${TOURNAMENT_SIZE} -NUM_SIGNAL_RESPONSES ${NUM_SIGNAL_RESPONSES} -NUM_ENV_CYCLES ${NUM_ENV_CYCLES} -CPU_TIME_PER_ENV_CYCLE ${CPU_TIME_PER_ENV_CYCLE} -POP_SIZE ${POP_SIZE} -GENERATIONS ${GENERATIONS} -SNAPSHOT_RESOLUTION ${SNAPSHOT_RESOLUTION} -SUMMARY_RESOLUTION ${SUMMARY_RESOLUTION} -USE_FUNC_REGULATION ${USE_FUNC_REGULATION} -USE_GLOBAL_MEMORY ${USE_GLOBAL_MEMORY} -INST_MIN_ARG_VAL ${INST_MIN_ARG_VAL} -INST_MAX_ARG_VAL ${INST_MAX_ARG_VAL} > run.log

rm ./${EXEC}