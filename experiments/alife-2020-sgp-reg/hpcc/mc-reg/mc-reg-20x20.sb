#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=144:00:00      # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-200
#SBATCH --mem=8G             # memory required per node - amount of memory (in bytes)
#SBATCH --job-name mc20   # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab

########## Command Lines to Run ##########
EXP=mc-reg
DATA_DIR=/mnt/scratch/lalejini/data/sgp-regulation/alife-2020/${EXP}
CONFIG_DIR=/mnt/home/lalejini/devo_ws/signalgp-genetic-regulation/experiments/alife-2020-sgp-reg/configs-${EXP}

##################################
# Setup random seed info
PROBLEM_SEED_OFFSET=102200
SEED=$((SLURM_ARRAY_TASK_ID + PROBLEM_SEED_OFFSET))

##################################
# Executable information
WORLD=mc-reg-exp
TAG_LEN=64
MATCH_METRIC=streak
MATCH_THRESH=25
REGULATOR_TYPE=mult

##################################
# General world parameters
RESPONSE_PHASE_CPU_TIME=128
DEVELOPMENT_PHASE_CPU_TIME=128
DEME_WIDTH=20
DEME_HEIGHT=20
NUM_RESPONSE_TYPES=20

EPIGENETIC_INHERITANCE=1
FIXED_REPRO_TAG=0
ALLOW_MESSAGING=1

GENERATIONS=10000
POP_SIZE=500
SUMMARY_RESOLUTION=100
SNAPSHOT_RESOLUTION=500
USE_RANDOM_CELL_SCHEDULING=0
MAX_ACTIVE_THREAD_CNT=8
MAX_THREAD_CAPACITY=16
SCORE_RESPONSE_MODE=neighbors

REPLICATES=50
TREATMENT_ID=0

##################################
# CONDITIONS:
#   - USE_FUNC_REGULATION=0
#   - USE_GLOBAL_MEMORY=0
REG_1__MEM_0__START=$((1+$TREATMENT_ID*$REPLICATES))
REG_1__MEM_0__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))
REG_1__MEM_1__START=$((1+$TREATMENT_ID*$REPLICATES))
REG_1__MEM_1__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))
REG_0__MEM_1__START=$((1+$TREATMENT_ID*$REPLICATES))
REG_0__MEM_1__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))
REG_0__MEM_0__START=$((1+$TREATMENT_ID*$REPLICATES))
REG_0__MEM_0__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

##################################

if [ ${SLURM_ARRAY_TASK_ID} -ge ${REG_1__MEM_0__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${REG_1__MEM_0__STOP} ] ; then
  USE_FUNC_REGULATION=1
  USE_GLOBAL_MEMORY=0
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${REG_1__MEM_1__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${REG_1__MEM_1__STOP} ] ; then
  USE_FUNC_REGULATION=1
  USE_GLOBAL_MEMORY=1
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${REG_0__MEM_1__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${REG_0__MEM_1__STOP} ] ; then
  USE_FUNC_REGULATION=0
  USE_GLOBAL_MEMORY=1
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${REG_0__MEM_0__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${REG_0__MEM_0__STOP} ] ; then
  USE_FUNC_REGULATION=0
  USE_GLOBAL_MEMORY=0
else
 echo "run ${SEED} failed to launch" >> ${DATA_DIR}/failed_to_launch.txt
fi

EXEC=${WORLD}_tag-len-${TAG_LEN}_match-metric-${MATCH_METRIC}_thresh-${MATCH_THRESH}_reg-${REGULATOR_TYPE}
RUN_NAME=W_${DEME_WIDTH}__H_${DEME_HEIGHT}__RESPS_${NUM_RESPONSE_TYPES}__EP_${EPIGENETIC_INHERITANCE}__FIXED_RT_${FIXED_REPRO_TAG}__MSG_${ALLOW_MESSAGING}__REG_${USE_FUNC_REGULATION}__MEM_${USE_GLOBAL_MEMORY}__SEED_${SEED}
RUN_DIR=${DATA_DIR}/${RUN_NAME}

mkdir -p ${RUN_DIR}
cd ${RUN_DIR}
cp ${CONFIG_DIR}/config.cfg .
cp ${CONFIG_DIR}/${EXEC} .

echo "./${EXEC} -SEED ${SEED} -RESPONSE_PHASE_CPU_TIME ${RESPONSE_PHASE_CPU_TIME} -DEVELOPMENT_PHASE_CPU_TIME ${DEVELOPMENT_PHASE_CPU_TIME} -DEME_WIDTH ${DEME_WIDTH} -DEME_HEIGHT ${DEME_HEIGHT} -NUM_RESPONSE_TYPES ${NUM_RESPONSE_TYPES} -EPIGENETIC_INHERITANCE ${EPIGENETIC_INHERITANCE} -FIXED_REPRO_TAG ${FIXED_REPRO_TAG} -ALLOW_MESSAGING ${ALLOW_MESSAGING} -GENERATIONS ${GENERATIONS} -POP_SIZE ${POP_SIZE} -SUMMARY_RESOLUTION ${SUMMARY_RESOLUTION} -SNAPSHOT_RESOLUTION ${SNAPSHOT_RESOLUTION} -USE_RANDOM_CELL_SCHEDULING ${USE_RANDOM_CELL_SCHEDULING} -MAX_ACTIVE_THREAD_CNT ${MAX_ACTIVE_THREAD_CNT} -MAX_THREAD_CAPACITY ${MAX_THREAD_CAPACITY} -SCORE_RESPONSE_MODE ${SCORE_RESPONSE_MODE} -USE_FUNC_REGULATION ${USE_FUNC_REGULATION} -USE_GLOBAL_MEMORY ${USE_GLOBAL_MEMORY}" > cmd.txt

./${EXEC} -SEED ${SEED} -RESPONSE_PHASE_CPU_TIME ${RESPONSE_PHASE_CPU_TIME} -DEVELOPMENT_PHASE_CPU_TIME ${DEVELOPMENT_PHASE_CPU_TIME} -DEME_WIDTH ${DEME_WIDTH} -DEME_HEIGHT ${DEME_HEIGHT} -NUM_RESPONSE_TYPES ${NUM_RESPONSE_TYPES} -EPIGENETIC_INHERITANCE ${EPIGENETIC_INHERITANCE} -FIXED_REPRO_TAG ${FIXED_REPRO_TAG} -ALLOW_MESSAGING ${ALLOW_MESSAGING} -GENERATIONS ${GENERATIONS} -POP_SIZE ${POP_SIZE} -SUMMARY_RESOLUTION ${SUMMARY_RESOLUTION} -SNAPSHOT_RESOLUTION ${SNAPSHOT_RESOLUTION} -USE_RANDOM_CELL_SCHEDULING ${USE_RANDOM_CELL_SCHEDULING} -MAX_ACTIVE_THREAD_CNT ${MAX_ACTIVE_THREAD_CNT} -MAX_THREAD_CAPACITY ${MAX_THREAD_CAPACITY} -SCORE_RESPONSE_MODE ${SCORE_RESPONSE_MODE} -USE_FUNC_REGULATION ${USE_FUNC_REGULATION} -USE_GLOBAL_MEMORY ${USE_GLOBAL_MEMORY} > run.log

rm ./${EXEC}