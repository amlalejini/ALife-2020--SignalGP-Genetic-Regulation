#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=4:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-210
#SBATCH --mem=4G               # memory required per node - amount of memory (in bytes)
#SBATCH --job-name ce4hsh      # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab

########## Command Lines to Run ##########
EXP=chg-env
DATA_DIR=/mnt/scratch/lalejini/data/sgp-regulation/tag-metric-exps/mut-sweep/${EXP}
CONFIG_DIR=/mnt/home/lalejini/devo_ws/signalgp-genetic-regulation/experiments/tag-metric-exps/configs-${EXP}

##################################
# Setup random seed info
PROBLEM_SEED_OFFSET=504800
SEED=$((SLURM_ARRAY_TASK_ID + PROBLEM_SEED_OFFSET))

##################################
# Executable information
WORLD=${EXP}-exp
MATCH_THRESH=0
REGULATOR_TYPE=mult

##################################
# VARIABLES
# MATCH_METRIC=[streak/integer/hash/hamming/streak-exact]
MATCH_METRIC=hash
NUM_ENV_STATES=4
NUM_ENV_UPDATES=${NUM_ENV_STATES}
TAG_LEN=32
##################################
# General world parameters
POP_SIZE=1000
GENERATIONS=1000
SUMMARY_RESOLUTION=10
SNAPSHOT_RESOLUTION=${GENERATIONS}
USE_FUNC_REGULATION=1
USE_GLOBAL_MEMORY=0
CPU_CYCLES_PER_ENV_UPDATE=256
MAX_FUNC_CNT=64
MAX_ACTIVE_THREAD_CNT=8
MAX_THREAD_CAPACITY=16
TOURNAMENT_SIZE=8

REPLICATES=30
TREATMENT_ID=0

##################################
# CONDITIONS:
# - TAG_MUT_RATE = [0001, 0003, 001, 003, 01, 03, 1]

MUT_0001__START=$((1+$TREATMENT_ID*$REPLICATES))
MUT_0001__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

MUT_0003__START=$((1+$TREATMENT_ID*$REPLICATES))
MUT_0003__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

MUT_001__START=$((1+$TREATMENT_ID*$REPLICATES))
MUT_001__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

MUT_003__START=$((1+$TREATMENT_ID*$REPLICATES))
MUT_003__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

MUT_01__START=$((1+$TREATMENT_ID*$REPLICATES))
MUT_01__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

MUT_03__START=$((1+$TREATMENT_ID*$REPLICATES))
MUT_03__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

MUT_1__START=$((1+$TREATMENT_ID*$REPLICATES))
MUT_1__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))


##################################

if [ ${SLURM_ARRAY_TASK_ID} -ge ${MUT_0001__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${MUT_0001__STOP} ] ; then
  TAG_MUT_RATE=0.0001
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${MUT_0003__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${MUT_0003__STOP} ] ; then
  TAG_MUT_RATE=0.0003
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${MUT_001__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${MUT_001__STOP} ] ; then
  TAG_MUT_RATE=0.001
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${MUT_003__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${MUT_003__STOP} ] ; then
  TAG_MUT_RATE=0.003
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${MUT_01__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${MUT_01__STOP} ] ; then
  TAG_MUT_RATE=0.01
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${MUT_03__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${MUT_03__STOP} ] ; then
  TAG_MUT_RATE=0.03
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${MUT_1__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${MUT_1__STOP} ] ; then
  TAG_MUT_RATE=0.1
else
 echo "run ${SEED} failed to launch" >> ${DATA_DIR}/failed_to_launch.txt
fi

MUT_RATE__INST_TAG_BF=${TAG_MUT_RATE}
MUT_RATE__FUNC_TAG_BF=${TAG_MUT_RATE}

EXEC=${WORLD}_tag-len-${TAG_LEN}_match-metric-${MATCH_METRIC}_thresh-${MATCH_THRESH}_reg-${REGULATOR_TYPE}

RUN_NAME=RUN__ENV_${NUM_ENV_UPDATES}__METRIC_${MATCH_METRIC}__TAG_MUT_RATE_${TAG_MUT_RATE}__SEED_${SEED}
RUN_DIR=${DATA_DIR}/${RUN_NAME}

mkdir -p ${RUN_DIR}
cd ${RUN_DIR}
cp ${CONFIG_DIR}/config.cfg .
cp ${CONFIG_DIR}/${EXEC} .

echo "./${EXEC} -SEED ${SEED} -NUM_ENV_STATES ${NUM_ENV_STATES} -NUM_ENV_UPDATES ${NUM_ENV_UPDATES} -POP_SIZE ${POP_SIZE} -GENERATIONS ${GENERATIONS} -SUMMARY_RESOLUTION ${SUMMARY_RESOLUTION} -SNAPSHOT_RESOLUTION ${SNAPSHOT_RESOLUTION} -USE_FUNC_REGULATION ${USE_FUNC_REGULATION} -USE_GLOBAL_MEMORY ${USE_GLOBAL_MEMORY} -CPU_CYCLES_PER_ENV_UPDATE ${CPU_CYCLES_PER_ENV_UPDATE} -MAX_FUNC_CNT ${MAX_FUNC_CNT} -MAX_ACTIVE_THREAD_CNT ${MAX_ACTIVE_THREAD_CNT} -MAX_THREAD_CAPACITY ${MAX_THREAD_CAPACITY} -TOURNAMENT_SIZE ${TOURNAMENT_SIZE} -MUT_RATE__INST_TAG_BF ${MUT_RATE__INST_TAG_BF} -MUT_RATE__FUNC_TAG_BF ${MUT_RATE__FUNC_TAG_BF}" > ./cmd.txt
./${EXEC} -SEED ${SEED} -NUM_ENV_STATES ${NUM_ENV_STATES} -NUM_ENV_UPDATES ${NUM_ENV_UPDATES} -POP_SIZE ${POP_SIZE} -GENERATIONS ${GENERATIONS} -SUMMARY_RESOLUTION ${SUMMARY_RESOLUTION} -SNAPSHOT_RESOLUTION ${SNAPSHOT_RESOLUTION} -USE_FUNC_REGULATION ${USE_FUNC_REGULATION} -USE_GLOBAL_MEMORY ${USE_GLOBAL_MEMORY} -CPU_CYCLES_PER_ENV_UPDATE ${CPU_CYCLES_PER_ENV_UPDATE} -MAX_FUNC_CNT ${MAX_FUNC_CNT} -MAX_ACTIVE_THREAD_CNT ${MAX_ACTIVE_THREAD_CNT} -MAX_THREAD_CAPACITY ${MAX_THREAD_CAPACITY} -TOURNAMENT_SIZE ${TOURNAMENT_SIZE} -MUT_RATE__INST_TAG_BF ${MUT_RATE__INST_TAG_BF} -MUT_RATE__FUNC_TAG_BF ${MUT_RATE__FUNC_TAG_BF} > run.log

rm ./${EXEC}